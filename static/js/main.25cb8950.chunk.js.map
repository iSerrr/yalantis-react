{"version":3,"sources":["App.module.css","components/BirthCard.module.css","lib/patterns.js","lib/createEmployeesList.js","components/employees/Employee.js","components/employees/ListEmployeesSegment.js","components/employees/index.js","components/BirthCard.js","App.js","index.js","components/employees/Employee.module.css","components/employees/index.module.css","components/employees/ListEmployeesSegment.module.css"],"names":["module","exports","alphabet","split","months","createEmployeesList","employees","pattern","EmployeesList","employeesByAz","map","letter","toLowerCase","createEmployeesPatternByAz","employee","key","length","lastName","substr","Date","dob","getMonth","employeesResult","employeesListKey","title","Employee","type","toggleChecked","useContext","AppContext","date","birthDay","getDate","getFullYear","employeeInfo","firstName","className","classes","primary","join","id","checkbox","checked","onChange","htmlFor","React","memo","ListEmployeesSegment","showEmpty","toUpperCase","employeeData","Employees","list","item","index","BirthCard","filterEmployees","employeesData","filter","createContext","App","useState","setEmployees","localStorage","getItem","JSON","parse","setChecked","useEffect","axios","get","then","data","includes","setItem","stringify","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25cb8950.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1srmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BirthCard\":\"BirthCard_BirthCard__3b53a\"};","const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\r\n\r\nconst months = ['January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n]\r\n\r\nexport {months, alphabet}","import {months} from './patterns'\r\n\r\nconst createEmployeesList = (employees, pattern) => {\r\n\r\n    const createEmployeesPatternByAz = () => {\r\n        const employeesByAz = {}\r\n        pattern.map(letter => {\r\n            employeesByAz[letter.toLowerCase()] = []\r\n            return null\r\n        })\r\n        return employeesByAz\r\n    }\r\n\r\n    const EmployeesList = createEmployeesPatternByAz()\r\n\r\n    employees.map(employee => {\r\n        const key = pattern.length > 20\r\n            ? employee.lastName.substr(0, 1).toLowerCase()\r\n            : months[new Date(employee.dob).getMonth()].toLowerCase()\r\n        EmployeesList[key] = [...EmployeesList[key], employee]\r\n        return null\r\n    })\r\n\r\n    let employeesResult = []\r\n\r\n    for (const employeesListKey in EmployeesList) {\r\n        employeesResult = [...employeesResult, {\r\n            title: employeesListKey,\r\n            employees: EmployeesList[employeesListKey]\r\n        }]\r\n    }\r\n\r\n    return employeesResult\r\n}\r\n\r\nexport {createEmployeesList}","import React, {useContext} from 'react'\r\nimport {months} from '../../lib/patterns'\r\nimport classes from './Employee.module.css'\r\nimport {AppContext} from '../../App'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Employee = ({employee, type}) => {\r\n\r\n    const {toggleChecked} = useContext(AppContext)\r\n\r\n    const date = new Date(employee.dob)\r\n    const birthDay = `- ${date.getDate()} ${months[date.getMonth()]}, ${date.getFullYear()} year`\r\n    const employeeInfo = `${employee.lastName} ${employee.firstName} ${type === 'date' ? birthDay : ''}`\r\n\r\n    return (\r\n        <>\r\n            <li className={[classes.employee, type === 'date' ? classes.date : classes.primary].join(' ')}>\r\n                <input id={employee.id}\r\n                       type=\"checkbox\"\r\n                       className={classes.checkbox}\r\n                       checked={employee.checked}\r\n                       onChange={() => toggleChecked(employee.id)}\r\n                />\r\n                <label htmlFor={employee.id}>{employeeInfo}</label>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nEmployee.propTypes = {\r\n    employee: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        firstName: PropTypes.string.isRequired,\r\n        lastName: PropTypes.string.isRequired,\r\n        dob: PropTypes.string.isRequired,\r\n        checked: PropTypes.bool.isRequired\r\n    }),\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default React.memo(Employee)","import React from 'react'\r\nimport classes from './ListEmployeesSegment.module.css'\r\nimport Employee from './Employee'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ListEmployeesSegment = ({letter, employees, showEmpty, type}) => {\r\n    return (\r\n        showEmpty\r\n            ? (\r\n                <li className={classes[type]}>\r\n                    <h2>{letter.toUpperCase()}</h2>\r\n                    {\r\n                        employees.length !== 0\r\n                            ? (\r\n                                <ul>\r\n                                    {employees.map(employeeData =>\r\n                                        <Employee key={employeeData.id}\r\n                                                  employee={employeeData}\r\n                                                  type={type}\r\n                                        />\r\n                                    )}\r\n                                </ul>\r\n                            ) : (<p>-</p>)\r\n                    }\r\n                </li>\r\n            )\r\n            : employees.length !== 0 ? (\r\n                <li className={classes[type]}>\r\n                    <h2>{letter.toUpperCase()}</h2>\r\n                    <ul>\r\n                        {employees.map(employeeData =>\r\n                            <Employee key={employeeData.id}\r\n                                      employee={employeeData}\r\n                                      type={type}\r\n                            />\r\n                        )}\r\n                    </ul>\r\n                </li>\r\n            )\r\n            : ('')\r\n    )\r\n}\r\n\r\nListEmployeesSegment.propTypes = {\r\n    letter: PropTypes.string.isRequired,\r\n    employees: PropTypes.array.isRequired,\r\n    showEmpty: PropTypes.bool.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ListEmployeesSegment\r\n\r\n","import React from 'react'\r\nimport {alphabet} from '../../lib/patterns'\r\nimport {createEmployeesList} from '../../lib/createEmployeesList'\r\nimport classes from './index.module.css'\r\nimport ListEmployeesSegment from './ListEmployeesSegment'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Employees = ({employees}) => {\r\n\r\n    return (\r\n        <div className={classes.Employees}>\r\n            <h1>Employees</h1>\r\n            <ul className={classes.list}>\r\n\r\n                {createEmployeesList(employees, alphabet).map((item, index) =>\r\n                    <ListEmployeesSegment key={index}\r\n                                          letter={item.title}\r\n                                          employees={item.employees}\r\n                                          showEmpty={true}\r\n                                          type={'primary'}\r\n                    />\r\n                )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nEmployees.propTypes = {\r\n    employees: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Employees","import React from 'react'\r\nimport classes from './BirthCard.module.css'\r\nimport {createEmployeesList} from '../lib/createEmployeesList'\r\nimport PropTypes from 'prop-types'\r\nimport {months} from '../lib/patterns'\r\nimport ListEmployeesSegment from './employees/ListEmployeesSegment'\r\n\r\nconst BirthCard = ({employees}) => {\r\n\r\n    const filterEmployees = employeesData => employeesData.filter(employee => employee.checked)\r\n    return (\r\n        <div className={classes.BirthCard}>\r\n            <h1>Employees birthday</h1>\r\n            {filterEmployees(employees).length !== 0\r\n                ? (\r\n                    <ul>\r\n                        {createEmployeesList(filterEmployees(employees), months).map((item, index) =>\r\n                            <ListEmployeesSegment key={index}\r\n                                                  letter={item.title}\r\n                                                  employees={item.employees}\r\n                                                  showEmpty={false}\r\n                                                  type={'date'}\r\n                            />\r\n                        )}\r\n                    </ul>\r\n                )\r\n                : (\r\n                    <span>No selected employees</span>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nBirthCard.propTypes = {\r\n    employees: PropTypes.array.isRequired\r\n}\r\n\r\nexport default BirthCard","import React, {useState, useEffect} from 'react'\nimport classes from './App.module.css'\nimport axios from 'axios'\nimport Employees from './components/employees'\nimport BirthCard from './components/BirthCard'\n\nconst AppContext = React.createContext()\nexport {AppContext}\n\nconst App = () => {\n    const [employees, setEmployees] = useState([])\n    const [checked, setChecked] = useState(localStorage.getItem('employeesId') ? JSON.parse(localStorage.getItem('employeesId')) : [])\n\n    const fetchEmployeesFromDb = () =>\n        axios\n            .get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n            .then(({data}) => data.map(item => checked.includes(item.id)\n                ? ({...item, checked: true})\n                : ({...item, checked: false})\n                )\n            )\n\n    const checkedUpdate = () => {\n        setChecked(employees.filter(employee => employee.checked).map(employee => employee.id))\n    }\n\n    useEffect(() => {\n        fetchEmployeesFromDb().then(data => setEmployees(data))\n    }, [])\n\n    useEffect(() => {\n        if (employees.length !== 0) checkedUpdate()\n    }, [employees])\n\n    useEffect(() => {\n        if (employees.length !== 0) localStorage.setItem('employeesId', JSON.stringify(checked))\n    }, [checked])\n\n    const toggleChecked = id => {\n        setEmployees((employees.map(employee =>\n                employee.id === id\n                    ? {...employee, checked: !employee.checked}\n                    : employee\n            ))\n        )\n    }\n\n    return (\n        <AppContext.Provider value={{toggleChecked}}>\n            <div className={classes.App}>\n                <Employees employees={employees}/>\n                <BirthCard employees={employees}/>\n            </div>\n        </AppContext.Provider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employee\":\"Employee_employee__1qpN3\",\"primary\":\"Employee_primary__2mvBM\",\"checkbox\":\"Employee_checkbox__13x-r\",\"date\":\"Employee_date__1BM_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Employees\":\"employees_Employees__3INj-\",\"list\":\"employees_list__1Pw6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"ListEmployeesSegment_primary__3KP9s\",\"date\":\"ListEmployeesSegment_date__Ow3pu\"};"],"sourceRoot":""}